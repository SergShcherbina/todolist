import { ResponseType, ResultCode } from "../api/todolist-api";
import { appSetErrorAC, appSetLoadingStatusAC } from "../app/app-reducer";
import { Dispatch } from "redux";
import { AxiosResponse } from "axios";

//–¥–∂e–Ω–µ—Ä–∏–∫–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è)
export const handleServerAppError = <T>(res: AxiosResponse<ResponseType<T>>, dispatch: Dispatch) => {
  if (res.data.messages.length >= 1) {
    dispatch(appSetErrorAC(res.data.messages[0] + "üò†"));
  } else {
    dispatch(appSetErrorAC("error message + üò†"));
  }
  dispatch(appSetLoadingStatusAC("failed"));
};

export const handleServerNetworkError = (err: { message: string }, dispatch: Dispatch) => {
  dispatch(appSetErrorAC(err.message + " üò†"));
  dispatch(appSetLoadingStatusAC("failed"));
};
